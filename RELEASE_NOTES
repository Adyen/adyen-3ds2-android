[//]: # (This file will be used for the release notes on GitHub when publishing.)
[//]: # (Types of changes: `New` `Changed` `Deprecated` `Removed` `Fixed` `Security`)
[//]: # (Example:)
[//]: # (## Added)
[//]: # ( - New protocol version support)
[//]: # (## Changed)
[//]: # ( - Package changed from `com.adyen.threeds2` to `com.adyen.threeds2.api`)
[//]: # ( # Deprecated)
[//]: # ( - Configurations public constructor are deprecated, please use each Configuration's builder to make a Configuration object)

## New
* Message Bridging Extension support for Out-of-Band (OOB) challenge type. During OOB challenge on protocol version 2.2.0 to simplify navigation to issuer app there will be a new button shown to navigate to issuer app if ACS supports this feature.
This introduces new button type `ButtonType.OPEN_OOB_APP` that is customizable via UiCustomization class:

```kotlin
UiCustomization().apply {
    //...
    setButtonCustomization(
        buttonCustomization,
        UiCustomization.ButtonType.OPEN_OOB_APP
    )
}.
```
* Android App Link format (https) support for `threeDSRequestorAppUrl`. Because of recent updates to the 3D Secure protocol, we strongly recommend that you provide the `threeDSRequestorAppURL` parameter as an Android App Link instead of custom link.
This requires your app to handle the provided Android App Link. More details on how to handle Android App Link can be found on docs [page](https://docs.adyen.com/online-payments/classic-integrations/api-integration-ecommerce/3d-secure/native-3ds2/android-sdk-integration#present-a-challenge)
* Eftpos scheme certificates

## Changed
* Improved internal working with device information
* Amex Public Key

## Fixed
* Automatically completing HTML OOB challenge as Native OOB challenge if shopper was automatically redirected back from issuer app

## Removed
* `AdyenConfigParameters.Builder(directoryServerId, directoryServerPublicKey)`
Replace by `AdyenConfigParameters.Builder(directoryServerId, directoryServerPublicKey, directoryServerRootCertificates)` that supports `directoryServerRootCertificates`:

```kotlin
val additionalData: Map<String, String> = ... // Retrieved from Adyen.

//...
val directoryServerRootCertificates = additionalData.get(
    "threeds2.threeDS2DirectoryServerInformation.rootCertificates"
)

val configParameters = AdyenConfigParameters.Builder(
    directoryServerId,
    directoryServerPublicKey,
    directoryServerRootCertificates
)
//...
.build()
```
